buildscript {
	ext {
		kotlinVersion = '1.2.10'
		springBootVersion = '2.0.5.RELEASE'
		hibernateVersion = '5.1.11.Final'
	}
	repositories {
		mavenCentral()
		files 'build/classes/kotlin/main'
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
		classpath('org.hibernate:hibernate-core')
		classpath("org.liquibase.ext:liquibase-hibernate5:3.6")
		classpath("org.liquibase:liquibase-core:3.5.3")
		classpath("gradle.plugin.org.liquibase:liquibase-gradle-plugin:1.2.4")
		classpath "org.postgresql:postgresql:42.1.4"
		classpath "org.springframework.boot:spring-boot-autoconfigure:$springBootVersion"

		classpath "org.springframework:spring-beans:4.3.10.RELEASE"
		classpath "org.springframework:spring-core:4.3.10.RELEASE"
		classpath "org.springframework:spring-context:4.3.10.RELEASE"
		classpath "org.springframework:spring-jdbc:4.3.10.RELEASE"
		classpath "org.springframework:spring-orm:4.3.10.RELEASE"

		classpath "org.springframework.data:spring-data-commons:1.11.6.RELEASE"
		classpath "org.springframework.data:spring-data-jpa:1.11.6.RELEASE"

		classpath "org.hibernate:hibernate-core:$hibernateVersion"
		classpath "org.hibernate:hibernate-entitymanager:$hibernateVersion"

		classpath files('src/main')
		classpath files('build/classes/kotlin/main')
	}
}

plugins {
    id 'org.liquibase.gradle' version '1.2.4'
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'



group = 'com.copperleaf'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

repositories {
	mavenCentral()
    jcenter()
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('org.springframework.boot:spring-boot-starter-hateoas')
	compile('com.fasterxml.jackson.module:jackson-module-kotlin')
	compile('org.springframework.data:spring-data-rest-hal-browser')
	compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	compile("org.jetbrains.kotlin:kotlin-reflect")
	compile('org.liquibase.ext:liquibase-hibernate5:3.6')
	compile("org.hibernate:hibernate-core")
	compile('org.liquibase:liquibase-gradle-plugin:1.2.4')
	compile('org.postgresql:postgresql:42.1.4')

	runtime 'org.postgresql:postgresql'

	testCompile('org.springframework.boot:spring-boot-starter-test')
}

liquibase {
    activities {
        main {
			classpath 'src/main'
            changeLogFile "$projectDir/src/main/resources/db/changelog/db.changelog.xml"
            url 'jdbc:postgresql://localhost:5432/bootcamp'
			referenceUrl 'hibernate:spring:com.copperleaf.bootcamp?dialect=org.hibernate.dialect.PostgreSQLDialect'
			username "bootcamp"
			password "bootcamp"
            driver 'org.postgresql.Driver'
			referenceDriver 'liquibase.ext.hibernate.database.connection.HibernateDriver'
        }
    }
    runList = 'main'
}


// Ktlint integration with gradle.
configurations {
	ktlint
}

dependencies {
	ktlint "com.github.shyiko:ktlint:0.14.0"
}

task ktlint(type: JavaExec, group: "verification") {
	description = "Check Kotlin code style."
	classpath = configurations.ktlint
	main = "com.github.shyiko.ktlint.Main"
	args "src/**/*.kt"
	// to generate report in checkstyle format prepend following args:
	// "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
	// see https://github.com/shyiko/ktlint#usage for more
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
	description = "Fix Kotlin code style deviations."
	classpath = configurations.ktlint
	main = "com.github.shyiko.ktlint.Main"
	args "-F", "src/**/*.kt"
}

test {
	testLogging {
		showStandardStreams = true
		exceptionFormat = 'full'
	}
}